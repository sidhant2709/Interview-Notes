Just In Time Compilation and Ahead Of Time Compilation:



Promises:





Selector              Example                         Example description

.class	              .intro	                Selects all elements with class="intro"

.class1.class2        .name1.name2              Selects all elements with both name1 and name2 set within its class attribute

.class1 .class2       .name1 .name2             Selects all elements with name2 that is a descendant of an element with name1

element.class         p.intro                   Selects all <p> elements with class="intro"

element,element	      div, p	                Selects all <div> elements and all <p> elements

element element	      div p	                    Selects all <p> elements inside <div> elements

element>element	      div > p	                Selects all <p> elements where the parent is a <div> element

element+element	      div + p	                Selects the first <p> element that is placed immediately after <div> elements

element1~element2	  p ~ ul	                Selects every <ul> element that is preceded by a <p> element

:active	              a:active	                Selects the active link

::after	              p::after	                Insert something after the content of each <p> element

::before	          p::before	                Insert something before the content of each <p> element

:root	              :root	                    Selects the document's root element




Create a custom react hook to fetch users from an api https://randomuser.me/api and display their name and picture on the page, It must return list of user, the current user , a function to fetch the next user and a function to move back to the previous user
Here when we click on the next button in UI the api is called again and the new user is displayed and when we click on previous button it should show the previous user without calling the api

The api doesnot have any query params

Note. The above api generates a random single user on every call we have to save all the user whenever the api call is made.

Write the code in such a way that it is fully optimized and also write code for the UI also

use useCallBack hook to acheive the above functionality